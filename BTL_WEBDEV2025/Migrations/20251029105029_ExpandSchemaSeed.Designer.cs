// <auto-generated />
using System;
using BTL_WEBDEV2025.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BTL_WEBDEV2025.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251029105029_ExpandSchemaSeed")]
    partial class ExpandSchemaSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BTL_WEBDEV2025.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Nike"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Adidas"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Balenciaga"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Louboutin"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Puma"
                        },
                        new
                        {
                            Id = 6,
                            Name = "New Balance"
                        },
                        new
                        {
                            Id = 7,
                            Name = "ASICS"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Reebok"
                        });
                });

            modelBuilder.Entity("BTL_WEBDEV2025.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Men"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Women"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Kid"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Unisex"
                        });
                });

            modelBuilder.Entity("BTL_WEBDEV2025.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BTL_WEBDEV2025.Models.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("BTL_WEBDEV2025.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("DiscountPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsFeatured")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSpecialDeal")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            Category = "",
                            CategoryId = 4,
                            Description = "Classic leather and heritage style.",
                            ImageUrl = "/images/products/nike_airforce1.jpg",
                            IsFeatured = true,
                            IsSpecialDeal = false,
                            Name = "Nike Air Force 1 '07",
                            Price = 110m
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 1,
                            Category = "",
                            CategoryId = 1,
                            Description = "Big Air unit comfort.",
                            DiscountPrice = 120m,
                            ImageUrl = "/images/products/nike_airmax270.jpg",
                            IsFeatured = false,
                            IsSpecialDeal = true,
                            Name = "Nike Air Max 270",
                            Price = 150m
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 1,
                            Category = "",
                            CategoryId = 4,
                            Description = "Street icon returns with retro colors.",
                            ImageUrl = "/images/products/nike_dunklow.jpg",
                            IsFeatured = false,
                            IsSpecialDeal = false,
                            Name = "Nike Dunk Low Retro",
                            Price = 100m
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 1,
                            Category = "",
                            CategoryId = 1,
                            Description = "Everyday responsive running shoes.",
                            ImageUrl = "/images/products/nike_pegasus40.jpg",
                            IsFeatured = false,
                            IsSpecialDeal = false,
                            Name = "Nike Air Zoom Pegasus 40",
                            Price = 130m
                        });
                });

            modelBuilder.Entity("BTL_WEBDEV2025.Models.ProductVariant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductVariants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "White",
                            ProductId = 1,
                            Size = "41",
                            StockQuantity = 20
                        },
                        new
                        {
                            Id = 2,
                            Color = "White",
                            ProductId = 1,
                            Size = "42",
                            StockQuantity = 15
                        });
                });

            modelBuilder.Entity("BTL_WEBDEV2025.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Customer"
                        });
                });

            modelBuilder.Entity("BTL_WEBDEV2025.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@nike.com",
                            FullName = "Admin Account",
                            PasswordHash = "admin123",
                            PhoneNumber = "123456",
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("BTL_WEBDEV2025.Models.Order", b =>
                {
                    b.HasOne("BTL_WEBDEV2025.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BTL_WEBDEV2025.Models.OrderDetail", b =>
                {
                    b.HasOne("BTL_WEBDEV2025.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BTL_WEBDEV2025.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BTL_WEBDEV2025.Models.Product", b =>
                {
                    b.HasOne("BTL_WEBDEV2025.Models.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId");

                    b.HasOne("BTL_WEBDEV2025.Models.Category", "CategoryRef")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Brand");

                    b.Navigation("CategoryRef");
                });

            modelBuilder.Entity("BTL_WEBDEV2025.Models.ProductVariant", b =>
                {
                    b.HasOne("BTL_WEBDEV2025.Models.Product", "Product")
                        .WithMany("Variants")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BTL_WEBDEV2025.Models.User", b =>
                {
                    b.HasOne("BTL_WEBDEV2025.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BTL_WEBDEV2025.Models.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("BTL_WEBDEV2025.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("BTL_WEBDEV2025.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("BTL_WEBDEV2025.Models.Product", b =>
                {
                    b.Navigation("Variants");
                });

            modelBuilder.Entity("BTL_WEBDEV2025.Models.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
