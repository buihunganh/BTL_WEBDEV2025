@{
    ViewData["Title"] = "ABDDT Admin";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    var tab = Context.Request.Query["tab"].ToString();
    var isProducts = string.Equals(tab, "products", StringComparison.OrdinalIgnoreCase);
    var isCustomers = string.Equals(tab, "customers", StringComparison.OrdinalIgnoreCase);
    ViewData["ActiveMenu"] = isCustomers ? "customers" : (isProducts ? "products" : "dashboard");
}

<div class="container-fluid px-4 my-4">
    @if (!isProducts && !isCustomers) {
        <h1 class="fw-bold mb-4">Tổng quan</h1>
        <div class="row g-4 mb-4">
            <div class="col-6 col-md-3">
                <div class="card shadow-sm bg-white text-dark h-100 border-0 rounded-4">
                    <div class="card-body">
                        <div class="d-flex align-items-center mb-1">
                            <div class="me-2"><i class="bi bi-bar-chart-line fs-4"></i></div>
                            <div>
                                <small class="text-muted">Doanh số (USD)</small>
                                <div class="fs-4 fw-bold" id="stat-sales">0</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-6 col-md-3">
                <div class="card shadow-sm bg-white text-dark h-100 border-0 rounded-4">
                    <div class="card-body">
                        <div class="d-flex align-items-center mb-1">
                            <div class="me-2"><i class="bi bi-cart fs-4"></i></div>
                            <div>
                                <small class="text-muted">Đơn hàng</small>
                                <div class="fs-4 fw-bold" id="stat-orders">0</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-6 col-md-3">
                <div class="card shadow-sm bg-white text-dark h-100 border-0 rounded-4">
                    <div class="card-body">
                        <div class="d-flex align-items-center mb-1">
                            <div class="me-2"><i class="bi bi-people fs-4"></i></div>
                            <div>
                                <small class="text-muted">Khách hàng</small>
                                <div class="fs-4 fw-bold" id="stat-customers">0</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-6 col-md-3">
                <div class="card shadow-sm bg-white text-dark h-100 border-0 rounded-4">
                    <div class="card-body">
                        <div class="d-flex align-items-center mb-1">
                            <div class="me-2"><i class="bi bi-cash-coin fs-4"></i></div>
        <div>
                                <small class="text-muted">Lợi nhuận</small>
                                <div class="fs-4 fw-bold" id="stat-profit">—</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="card border-0 shadow-sm mb-4 rounded-4">
            <div class="card-body">
                <h5 class="mb-3 fw-bold">Biểu đồ doanh số</h5>
                <canvas id="salesChart" height="60"></canvas>
    </div>
        </div>
    }
    
    @if (isProducts) {
        <div>
            <div class="d-flex justify-content-between align-items-center mb-2">
                <h1 class="fw-bold">Quản lý Sản phẩm</h1>
                <button class="btn btn-dark" id="btnAddProduct"><i class="bi bi-plus-lg"></i> Thêm sản phẩm</button>
            </div>
    <div class="table-responsive">
                <table class="table table-striped align-middle">
            <thead>
                <tr>
                    <th>ID</th>
                            <th>Tên</th>
                            <th>Mô tả</th>
                            <th>Giá</th>
                            <th>Danh mục</th>
                            <th>Ảnh</th>
                            <th></th>
                </tr>
            </thead>
                    <tbody id="tableProducts"></tbody>
                </table>
            </div>
        </div>
    }

    @if (isCustomers) {
        <div>
            <div class="d-flex justify-content-between align-items-center mb-2">
                <h1 class="fw-bold">Quản lý Khách hàng</h1>
                <button class="btn btn-dark" id="btnAddCustomer"><i class="bi bi-person-plus"></i> Thêm khách hàng</button>
            </div>
            <div class="table-responsive">
                <table class="table table-striped align-middle">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Họ tên</th>
                            <th>Email</th>
                            <th>SĐT</th>
                            <th>Ngày sinh</th>
                            <th></th>
                    </tr>
                    </thead>
                    <tbody id="tableCustomers"></tbody>
        </table>
    </div>
        </div>
    }
</div>
@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
        async function fetchJson(url, opts) {
            const res = await fetch(url, Object.assign({ headers: { 'Content-Type': 'application/json' } }, opts));
            if (!res.ok) throw new Error(await res.text());
            return res.headers.get('content-type')?.includes('application/json') ? res.json() : res.text();
        }
        function fmtUSD(n){
            try { return new Intl.NumberFormat('en-US',{style:'currency',currency:'USD'}).format(Number(n||0)); } catch { return `$${n}`; }
        }

        const isProducts = '@(isProducts)'.toLowerCase() === 'true';
        const isCustomers = '@(isCustomers)'.toLowerCase() === 'true';

        // Tổng quan: nạp stats + chart
        if (!isProducts && !isCustomers) {
            fetchJson('/admin/api/stats').then(s => {
                document.getElementById('stat-sales').textContent = fmtUSD(s.totalSales);
                document.getElementById('stat-orders').textContent = s.totalOrders;
                document.getElementById('stat-customers').textContent = s.totalCustomers;
            }).catch(console.error);

            const ctx = document.getElementById('salesChart')?.getContext('2d');
            if (ctx) {
                new Chart(ctx, {
                    type: 'line',
                    data: { labels: ['02.08','03.08','10.08','20.08','30.08'], datasets: [
                        {label:'Số lượng bán',data:[4,6,6,3,1],borderColor:'#ef4a64',backgroundColor:'rgba(239,74,100,0.13)',tension:0.25},
                        {label:'Doanh số bán',data:[2,5,6,4,2],borderColor:'#2062e9',backgroundColor:'rgba(32,98,233,0.13)',tension:0.25}
                    ]}, options:{ responsive:true, plugins:{ legend:{ display:true, position:'top' } } }
                });
            }
        }

        // Products: list + CRUD
        async function loadProducts(){
            const rows = await fetchJson('/admin/api/products');
            const tb = document.getElementById('tableProducts');
            if(!tb) return;
            tb.innerHTML = rows.map(p=>`
                <tr>
                  <td>${p.id}</td>
                  <td>${p.name}</td>
                  <td>${p.description||''}</td>
                  <td>${fmtUSD(p.price)}</td>
                  <td>${p.category||''}</td>
                  <td>${p.imageUrl?`<img src="${p.imageUrl}" style="height:40px">`:''}</td>
                  <td>
                    <button class="btn btn-sm btn-outline-primary" onclick="editProduct(${p.id})">Sửa</button>
                    <button class="btn btn-sm btn-outline-danger ms-2" onclick="deleteProduct(${p.id})">Xóa</button>
                  </td>
                </tr>`).join('');
        }
        async function addProduct(){
            const name = prompt('Tên sản phẩm?'); if(!name) return;
            const price = parseFloat(prompt('Giá (USD)?')||'0');
            const description = prompt('Mô tả?')||'';
            const imageUrl = prompt('Ảnh (URL)?')||'';
            const category = prompt('Danh mục?')||'';
            await fetchJson('/admin/api/products/create',{ method:'POST', body: JSON.stringify({ name, price, description, imageUrl, category })});
            await loadProducts();
        }
        async function editProduct(id){
            const name = prompt('Tên mới?'); if(!name) return;
            const price = parseFloat(prompt('Giá (USD)?')||'0');
            const description = prompt('Mô tả?')||'';
            const imageUrl = prompt('Ảnh (URL)?')||'';
            const category = prompt('Danh mục?')||'';
            await fetchJson(`/admin/api/products/update/${id}`,{ method:'POST', body: JSON.stringify({ name, price, description, imageUrl, category })});
            await loadProducts();
        }
        async function deleteProduct(id){
            if(!confirm('Xóa sản phẩm?')) return;
            await fetchJson(`/admin/api/products/delete/${id}`,{ method:'POST' });
            await loadProducts();
        }
        if (isProducts) {
            loadProducts();
            document.getElementById('btnAddProduct')?.addEventListener('click', addProduct);
            window.editProduct = editProduct; window.deleteProduct = deleteProduct; // expose for onclick
        }

        // Customers: list + CRUD
        async function loadCustomers(){
            const rows = await fetchJson('/admin/api/customers');
            const tb = document.getElementById('tableCustomers'); if(!tb) return;
            tb.innerHTML = rows.map(c=>`
                <tr>
                  <td>${c.id}</td>
                  <td>${c.fullName||''}</td>
                  <td>${c.email}</td>
                  <td>${c.phoneNumber||''}</td>
                  <td>${c.dateOfBirth? new Date(c.dateOfBirth).toLocaleDateString(): ''}</td>
                  <td>
                    <button class="btn btn-sm btn-outline-primary" onclick="editCustomer(${c.id})">Sửa</button>
                    <button class="btn btn-sm btn-outline-danger ms-2" onclick="deleteCustomer(${c.id})">Xóa</button>
                  </td>
                </tr>`).join('');
        }
        async function addCustomer(){
            const fullName = prompt('Họ tên?'); if(!fullName) return;
            const email = prompt('Email?'); if(!email) return;
            const phoneNumber = prompt('SĐT?')||'';
            const dateOfBirth = prompt('Ngày sinh (YYYY-MM-DD)?')||null;
            await fetchJson('/admin/api/customers/create',{ method:'POST', body: JSON.stringify({ fullName, email, phoneNumber, dateOfBirth })});
            await loadCustomers();
        }
        async function editCustomer(id){
            const fullName = prompt('Họ tên mới?'); if(!fullName) return;
            const email = prompt('Email?'); if(!email) return;
            const phoneNumber = prompt('SĐT?')||'';
            const dateOfBirth = prompt('Ngày sinh (YYYY-MM-DD)?')||null;
            await fetchJson(`/admin/api/customers/update/${id}`,{ method:'POST', body: JSON.stringify({ fullName, email, phoneNumber, dateOfBirth })});
            await loadCustomers();
        }
        async function deleteCustomer(id){
            if(!confirm('Xóa khách hàng?')) return;
            await fetchJson(`/admin/api/customers/delete/${id}`,{ method:'POST' });
            await loadCustomers();
        }
        if (isCustomers) {
            loadCustomers();
            document.getElementById('btnAddCustomer')?.addEventListener('click', addCustomer);
            window.editCustomer = editCustomer; window.deleteCustomer = deleteCustomer;
        }
</script>
}

